//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.TeamFoundation.Migration.ClearCaseDetailedHistoryAdapter {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CCResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CCResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.TeamFoundation.Migration.ClearCaseDetailedHistoryAdapter.CCResources", typeof(CCResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter: Did not find Addin with ID &apos;{0}&apos;.
        /// </summary>
        public static string AddinNotFound {
            get {
                return ResourceManager.GetString("AddinNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BatchChangesInGroup.
        /// </summary>
        public static string BatchChangesInGroup {
            get {
                return ResourceManager.GetString("BatchChangesInGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CCBranchName.
        /// </summary>
        public static string BranchSettingName {
            get {
                return ResourceManager.GetString("BranchSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to main\{0}.
        /// </summary>
        public static string BranchVersionString {
            get {
                return ResourceManager.GetString("BranchVersionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        public static string CCActionCommentModifier {
            get {
                return ResourceManager.GetString("CCActionCommentModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict occurs when a file attribute is added, but the attribute type name cannot be found; the attribute type name must already exist in the ClearCase server..
        /// </summary>
        public static string CCAttrTypeNotFoundConflictTypeDescription {
            get {
                return ResourceManager.GetString("CCAttrTypeNotFoundConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCase attribute type not found conflict type.
        /// </summary>
        public static string CCAttrTypeNotFoundConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("CCAttrTypeNotFoundConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolve attribute type not found by retrying the adding of the attribute (after manually adding the attribute type outside).
        /// </summary>
        public static string CCAttrTypeNotFoundRetryActionFriendlyName {
            get {
                return ResourceManager.GetString("CCAttrTypeNotFoundRetryActionFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolve attribute type not found by skipping the adding of the attribute.
        /// </summary>
        public static string CCAttrTypeNotFoundSkipActionFriendlyName {
            get {
                return ResourceManager.GetString("CCAttrTypeNotFoundSkipActionFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolve the conflict by skipping the checkin command..
        /// </summary>
        public static string CCCheckinConflictSkipActionFriendlyName {
            get {
                return ResourceManager.GetString("CCCheckinConflictSkipActionFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The checkin to clearcase server failed..
        /// </summary>
        public static string CCCheckinConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("CCCheckinConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to load {0}.
        /// </summary>
        public static string CCConfigSpecLoadRule {
            get {
                return ResourceManager.GetString("CCConfigSpecLoadRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The change action {0} is not supported by the ClearCaseDetailedHistoryAdapter.
        /// </summary>
        public static string ChangeActionNotSupportedException {
            get {
                return ResourceManager.GetString("ChangeActionNotSupportedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIGRATION_LABEL_ALL_VERSIONS_AT_{0:yyyy}_{0:MM}_{0:dd}_{0:HH}_{0:mm}_{0:ss}_{0:fff}.
        /// </summary>
        public static string CheckinLabelFormat {
            get {
                return ResourceManager.GetString("CheckinLabelFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dd-MMM-yyyy.HH:mm:ss.
        /// </summary>
        public static string ClearCaseDateTimeFormat {
            get {
                return ResourceManager.GetString("ClearCaseDateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the clearcase server object with view name {0}..
        /// </summary>
        public static string ClearCaseServerNotFound {
            get {
                return ResourceManager.GetString("ClearCaseServerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearfsimportConfiguration.BatchSize.
        /// </summary>
        public static string ClearfsimportConfigurationBatchSize {
            get {
                return ResourceManager.GetString("ClearfsimportConfigurationBatchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearfsimportConfiguration.Master.
        /// </summary>
        public static string ClearfsimportConfigurationMaster {
            get {
                return ResourceManager.GetString("ClearfsimportConfigurationMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearfsimportConfiguration.ParseOutput.
        /// </summary>
        public static string ClearfsimportConfigurationParseOutput {
            get {
                return ResourceManager.GetString("ClearfsimportConfigurationParseOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearfsimportConfiguration.Unco.
        /// </summary>
        public static string ClearfsimportConfigurationUnco {
            get {
                return ResourceManager.GetString("ClearfsimportConfigurationUnco", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred running cleartool command: &apos;{0}&apos;: {1}.
        /// </summary>
        public static string ClearToolCommandException {
            get {
                return ResourceManager.GetString("ClearToolCommandException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.vws.
        /// </summary>
        public static string ClearToolViewPath {
            get {
                return ResourceManager.GetString("ClearToolViewPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to element * CHECKEDOUT.
        /// </summary>
        public static string ConfigSpecCheckOutRule {
            get {
                return ResourceManager.GetString("ConfigSpecCheckOutRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  
        ///element * /main/LATEST -mkbranch {0}.
        /// </summary>
        public static string ConfigSpecCreateBranch {
            get {
                return ResourceManager.GetString("ConfigSpecCreateBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  
        ///load {0}.
        /// </summary>
        public static string ConfigSpecLoadRule {
            get {
                return ResourceManager.GetString("ConfigSpecLoadRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  
        ///element * .../{0}/LATEST.
        /// </summary>
        public static string ConfigSpecSelectBranch {
            get {
                return ResourceManager.GetString("ConfigSpecSelectBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  
        ///element * /main/LATEST.
        /// </summary>
        public static string ConfigSpecSelectMain {
            get {
                return ResourceManager.GetString("ConfigSpecSelectMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CustomSetting &apos;{0}&apos; is not specified. This setting is required for {1}. Please change the configuration file and restart the migration..
        /// </summary>
        public static string CustomSettingNotSpecified {
            get {
                return ResourceManager.GetString("CustomSettingNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to main.
        /// </summary>
        public static string DefaultBranchName {
            get {
                return ResourceManager.GetString("DefaultBranchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \\localhost\cccstg.
        /// </summary>
        public static string DefaultStorageLocation {
            get {
                return ResourceManager.GetString("DefaultStorageLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to c:\cccstg.
        /// </summary>
        public static string DefaultStorageLocationLocalPath {
            get {
                return ResourceManager.GetString("DefaultStorageLocationLocalPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DetectChangesInCC.
        /// </summary>
        public static string DetectChangesInCC {
            get {
                return ResourceManager.GetString("DetectChangesInCC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DownloadFolder.
        /// </summary>
        public static string DownloadFolderSettingName {
            get {
                return ResourceManager.GetString("DownloadFolderSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter specific CustomSetting &apos;DownloadFolder&apos; is required. Please add the setting to the configuration file. .
        /// </summary>
        public static string DownloadLocationNotSpecified {
            get {
                return ResourceManager.GetString("DownloadLocationNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} directory ({1}) specified in the config file does not exist or is not accessible..
        /// </summary>
        public static string DynamicViewRootDoesNotExist {
            get {
                return ResourceManager.GetString("DynamicViewRootDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DynamicViewRoot.
        /// </summary>
        public static string DynamicViewRootSettingName {
            get {
                return ResourceManager.GetString("DynamicViewRootSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element {0} cannot be found..
        /// </summary>
        public static string ElementNotFoundException {
            get {
                return ResourceManager.GetString("ElementNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element {0} has two branches of type {1}. This is not supported by the converter tool. Hence skipping the branch applied at {2}.
        /// </summary>
        public static string ErrorMultipleBranchInstance {
            get {
                return ResourceManager.GetString("ErrorMultipleBranchInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some files are left checked out in the current migration view..
        /// </summary>
        public static string FilesLeftCheckedOutInView {
            get {
                return ResourceManager.GetString("FilesLeftCheckedOutInView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred getting items for diff from folder &apos;{0}&apos;: {1}.
        /// </summary>
        public static string GetDiffItemsException {
            get {
                return ResourceManager.GetString("GetDiffItemsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *.
        /// </summary>
        public static string HistoryRecordColumnDeliminator {
            get {
                return ResourceManager.GetString("HistoryRecordColumnDeliminator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ##.
        /// </summary>
        public static string HistoryRecordRowDeliminator {
            get {
                return ResourceManager.GetString("HistoryRecordRowDeliminator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lastProcessedChangeItemId argument (&apos;{0}&apos;) is not in the correct format..
        /// </summary>
        public static string InvalidChangeItemIdFormat {
            get {
                return ResourceManager.GetString("InvalidChangeItemIdFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid clearcase item path. .
        /// </summary>
        public static string InvalidClearCasePath {
            get {
                return ResourceManager.GetString("InvalidClearCasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The config file contains an invalid value for {0}: &apos;{1}&apos;.  The value should be in the form &apos;&lt;drive&gt;:\&apos;.
        /// </summary>
        public static string InvalidDynamicViewRoot {
            get {
                return ResourceManager.GetString("InvalidDynamicViewRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified snap shot start point string &apos;{0}&apos; is in a wrong format..
        /// </summary>
        public static string InvalidSnapshotString {
            get {
                return ResourceManager.GetString("InvalidSnapshotString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path {0} is not a well formed vob extended path..
        /// </summary>
        public static string InvalidVobExtendedPath {
            get {
                return ResourceManager.GetString("InvalidVobExtendedPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path {0} is not a well formed vob extended path for a branch..
        /// </summary>
        public static string InvalidVobExtendedPathForBranch {
            get {
                return ResourceManager.GetString("InvalidVobExtendedPathForBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path {0} is not a well formed vob extended path for an element..
        /// </summary>
        public static string InvalidVobExtendedPathForElement {
            get {
                return ResourceManager.GetString("InvalidVobExtendedPathForElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path {0} is not a well formed vob extended path for a version..
        /// </summary>
        public static string InvalidVobExtendedPathForVersion {
            get {
                return ResourceManager.GetString("InvalidVobExtendedPathForVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LabelAllVersions.
        /// </summary>
        public static string LabelAllVersions {
            get {
                return ResourceManager.GetString("LabelAllVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter created label type &apos;{0}&apos;.
        /// </summary>
        public static string LabelTypeCreated {
            get {
                return ResourceManager.GetString("LabelTypeCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter failed to create label type &apos;{0}&apos;: {1}.
        /// </summary>
        public static string LabelTypeCreationFailed {
            get {
                return ResourceManager.GetString("LabelTypeCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter failed to remove label type &apos;{0}&apos;: {1}.
        /// </summary>
        public static string LabelTypeRemoveFailed {
            get {
                return ResourceManager.GetString("LabelTypeRemoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter: Loaded Addin of type {0}.
        /// </summary>
        public static string LoadedAddin {
            get {
                return ResourceManager.GetString("LoadedAddin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter: No changes ready to migrate.
        /// </summary>
        public static string NoChangesReadyToMigrate {
            get {
                return ResourceManager.GetString("NoChangesReadyToMigrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Vob extended path {0} does not contain vob name {1}.
        /// </summary>
        public static string NoVobNameInVobExtendedPath {
            get {
                return ResourceManager.GetString("NoVobNameInVobExtendedPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path &apos;{0}&apos; is not under base path &apos;{1}&apos;.
        /// </summary>
        public static string PathNotUnderBasePath {
            get {
                return ResourceManager.GetString("PathNotUnderBasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PrecreatedViewName.
        /// </summary>
        public static string PrecreatedViewSettingName {
            get {
                return ResourceManager.GetString("PrecreatedViewSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QueryRenameHistory.
        /// </summary>
        public static string QueryRenameHistory {
            get {
                return ResourceManager.GetString("QueryRenameHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both &apos;DynamicViewRoot&apos; (for dynamic view) and &apos;StorageLocation&apos; (for snapshot view) are specified in the configuration file. Only one is needed. Please change the configuration file and restart the migration..
        /// </summary>
        public static string RedundentViewRoot {
            get {
                return ResourceManager.GetString("RedundentViewRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping adding attribute {0} to {1} per conflict resolution choice.
        /// </summary>
        public static string SkippingAddingAttribute {
            get {
                return ResourceManager.GetString("SkippingAddingAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping adding label {0} per conflict resolution choice.
        /// </summary>
        public static string SkippingAddingLabel {
            get {
                return ResourceManager.GetString("SkippingAddingLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StorageLocationLocalPath.
        /// </summary>
        public static string StorageLocationLocalPathSettingName {
            get {
                return ResourceManager.GetString("StorageLocationLocalPathSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StorageLocation.
        /// </summary>
        public static string StorageLocationSettingName {
            get {
                return ResourceManager.GetString("StorageLocationSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataSourceName: &apos;{0}&apos; AssociatedFileOrFolderPath: &apos;{2}&apos; VersionPath: &apos;{3}&apos; AssociatedFileOrFolderId: &apos;{1}&apos;.
        /// </summary>
        public static string ToStringVersion {
            get {
                return ResourceManager.GetString("ToStringVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add attribute {0} to {1}: {2}.
        /// </summary>
        public static string UnableToAddAttribute {
            get {
                return ResourceManager.GetString("UnableToAddAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter: Unable to get HashValue for item {0}: {1}.
        /// </summary>
        public static string UnableToGetHashVaue {
            get {
                return ResourceManager.GetString("UnableToGetHashVaue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCaseDetailedHistoryAdapter adding items to existing label type &apos;{0}&apos;.
        /// </summary>
        public static string UsingExistingLabelType {
            get {
                return ResourceManager.GetString("UsingExistingLabelType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CCC_{0}_view_{1}.
        /// </summary>
        public static string ViewName {
            get {
                return ResourceManager.GetString("ViewName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either &apos;DynamicViewRoot&apos; (for dynamic view) or &apos;StorageLocation&apos; (for snapshot view) needs to be specified if a pre-created view is used for migration. Please change the configuration file and restart the migration..
        /// </summary>
        public static string ViewRootNeeded {
            get {
                return ResourceManager.GetString("ViewRootNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vob &apos;{0} does not exist on ClearCase server. .
        /// </summary>
        public static string VobNotFound {
            get {
                return ResourceManager.GetString("VobNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VobName.
        /// </summary>
        public static string VobSettingName {
            get {
                return ResourceManager.GetString("VobSettingName", resourceCulture);
            }
        }
    }
}
