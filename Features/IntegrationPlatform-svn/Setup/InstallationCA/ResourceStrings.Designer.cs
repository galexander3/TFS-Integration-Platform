//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstallationCA {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InstallationCA.ResourceStrings", typeof(ResourceStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation was not able to set {0} as the owner of DB {1}. Exception {2}.
        /// </summary>
        internal static string ChangeDBOwnerError {
            get {
                return ResourceManager.GetString("ChangeDBOwnerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error connecting to database {0}. {1}.
        /// </summary>
        internal static string DBConnectionError {
            get {
                return ResourceManager.GetString("DBConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup creates a temporary test database ({0}) to test permissions and the CREATE DATABASE statement failed for that database. Please verify that the account being used for setup has dbcreator rights on the target system.  Also, please note that SQL Server 2008 no longer automatically grants this right to local machine administrators.  SQL Server Management Studio can be used to modify permissions as well as a command like this: &quot;SqlCMD –S&lt;instance=.\sqlexpress, ?&gt; –E –Q”EXEC sp_addsrvrolemember ‘&lt;domain\use [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DBPermissionFailure {
            get {
                return ResourceManager.GetString("DBPermissionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading extended property: {0}.
        /// </summary>
        internal static string DBSchemaPropertyError {
            get {
                return ResourceManager.GetString("DBSchemaPropertyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read TFS Integration Tools database version number.
        /// </summary>
        internal static string DBVersionNotFound {
            get {
                return ResourceManager.GetString("DBVersionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} custom action expected three packed arguments and it received: {1}.
        /// </summary>
        internal static string DeferredCustomActionParamError {
            get {
                return ResourceManager.GetString("DeferredCustomActionParamError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected setup failure granting {0} permissions to the database {1}. Exception: {2}.
        /// </summary>
        internal static string GrantDBPermissionError {
            get {
                return ResourceManager.GetString("GrantDBPermissionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve database name..
        /// </summary>
        internal static string MissingDatabaseName {
            get {
                return ResourceManager.GetString("MissingDatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve database server..
        /// </summary>
        internal static string MissingDatabaseServer {
            get {
                return ResourceManager.GetString("MissingDatabaseServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve TFS Integration Tools information from registry key..
        /// </summary>
        internal static string MissingRegistryKey {
            get {
                return ResourceManager.GetString("MissingRegistryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service account name is empty..
        /// </summary>
        internal static string MissingServiceAccountName {
            get {
                return ResourceManager.GetString("MissingServiceAccountName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TFS Integration Job Service name was not found.
        /// </summary>
        internal static string MissingTfsIntegrationJobServiceName {
            get {
                return ResourceManager.GetString("MissingTfsIntegrationJobServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TFS Integration Service name was not found.
        /// </summary>
        internal static string MissingTfsIntegrationServiceName {
            get {
                return ResourceManager.GetString("MissingTfsIntegrationServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The deferred custom action {0} received a null or empty parameter in the packed string: {1}.
        /// </summary>
        internal static string NullOrEmptyParamError {
            get {
                return ResourceManager.GetString("NullOrEmptyParamError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled exception in {0}: Error: {1}.
        /// </summary>
        internal static string UnhandledExceptionError {
            get {
                return ResourceManager.GetString("UnhandledExceptionError", resourceCulture);
            }
        }
    }
}
