<!-- Copyright © Microsoft Corporation.  All Rights Reserved.  This code released under the terms of the Microsoft Public License (MS-PL, http://opensource.org/licenses/ms-pl.html.) -->
<UserControl x:Class="Microsoft.TeamFoundation.Migration.Shell.ConflictManagement.ExistingRuleListView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Microsoft.TeamFoundation.Migration.Shell.ConflictManagement"
        xmlns:properties="clr-namespace:Microsoft.TeamFoundation.Migration.Shell.Properties"
        Background="{DynamicResource WindowBackgroundBrush}">
    <UserControl.Resources>
        <Style TargetType="{x:Type ListViewItem}"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid Margin="12" x:Name="main">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" MinHeight="30" />
            <RowDefinition Height="*" MinHeight="100" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock x:Uid="title" Text="Rules Manager" Style="{DynamicResource PageTitle}" Grid.Row="0" Margin="6"/>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,0,0,6">
            <Button x:Name="btnAddRule" ToolTip="{x:Static properties:Resources.AddNewRuleButtonTooltip}" Click="btnAddRule_Click" Margin="3" Padding="3">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="../Resources/Images/add.png" Width="16" Margin="3,0,3,0"/>
                        <TextBlock Text="Add New Rule"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="copyRuleButton" ToolTip="Copy Rule" Click="copyRuleButton_Click" Margin="3" Padding="3">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=rulesListView, Path=SelectedItem}" Value="{x:Null}">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="../Resources/Images/copy.png" Width="16" Margin="3,0,3,0"/>
                        <TextBlock Text="Copy Rule"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="btnRemoveRule" ToolTip="{x:Static properties:Resources.RemoveRuleString}" Click="btnRemoveRule_Click" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=rulesListView, Path=SelectedItem}" Value="{x:Null}">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="../Resources/Images/delete.png" Width="16" Margin="3,0,3,0"/>
                        <TextBlock Text="Delete Rule"/>
                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>
        <ListView Grid.Row="2" x:Name="rulesListView" ItemsSource="{Binding Rules}" IsSynchronizedWithCurrentItem="True" SizeChanged="rulesListView_SizeChanged" GridViewColumnHeader.Click="rulesListView_Click" SelectionMode="Single">
            <ListView.Resources>
                <ContextMenu x:Key="contextMenu">
                    <MenuItem Header="View Rule Details" Click="MenuItem_Click" FontWeight="Bold"/>
                    <MenuItem Header="Copy Rule" Click="copyRuleButton_Click"/>
                    <MenuItem Header="Delete Rule" Click="btnRemoveRule_Click"/>
                    <MenuItem Header="Preview Resolvable Conflicts" Click="previewButton_Click" IsEnabled="{Binding CanSave}"/>
                    <MenuItem Header="Save Rule" Click="resolveButton_Click" IsEnabled="{Binding CanSave}"/>
                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <Setter Property="ContextMenu" Value="{StaticResource contextMenu}"/>
                    <EventSetter Event="MouseDoubleClick" Handler="rulesListView_MouseDoubleClick"/>
                    <EventSetter Event="KeyDown" Handler="rulesListView_KeyDown"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Id" HeaderStringFormat="Id" Width="32">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Id}" ToolTip="{Binding Id}" TextTrimming="CharacterEllipsis"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Last Modified" HeaderStringFormat="CreationTime" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Height="17" Text="{Binding CreationTime}" ToolTip="{Binding CreationTime}" TextTrimming="CharacterEllipsis"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{x:Static properties:Resources.ConflictTypeString}" HeaderStringFormat="ConflictType.FriendlyName" Width="200">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Source="../Resources/Images/info.png" Height="16" ToolTip="{Binding Path=DescriptionDoc}" VerticalAlignment="Center" Margin="0,0,3,0" />
                                    <TextBlock Grid.Column="1" Text="{Binding ConflictType.FriendlyName}" ToolTip="{Binding ConflictType.FriendlyName}" TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{x:Static properties:Resources.ResolutionActionString}" HeaderStringFormat="Description">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Description}" ToolTip="{Binding Description}" TextTrimming="CharacterEllipsis"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Loading..." Visibility="{Binding IsRulesBWBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <Grid Grid.Row="3" DataContext="{Binding Rules/}" Height="250" Visibility="{Binding ElementName=main, Path=DataContext.ShellViewModel.IsAdvancedRulesEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition x:Uid="row1" Height="Auto"/>
                <RowDefinition x:Uid="row2" Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{x:Static properties:Resources.EditRuleString}" Margin="0,6,6,6" Style="{DynamicResource PageTitle}" 
                       Grid.Row="0" />
            <Grid Margin="9" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                <Setter Property="Grid.IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <local:RuleEditView Grid.Row="0" Width="Auto" Margin="0,0,0,6" />
                <UniformGrid Rows="1" Columns="2" Grid.Row="1" HorizontalAlignment="Right">
                    <Button x:Name="previewButton" Content="Preview" Click="previewButton_Click" IsEnabled="{Binding CanSave}" Margin="6,0,0,0" MinWidth="75"/>
                    <Button x:Name="btnResolve" Content="{x:Static properties:Resources.SaveString}" Click="resolveButton_Click" IsEnabled="{Binding CanSave}" Margin="6,0,0,0" MinWidth="75" />
                </UniformGrid>
            </Grid>
        </Grid>
        <Button x:Name="cancelButton" HorizontalAlignment="Right" Grid.Row="4" MinHeight="23" MinWidth="75" Content="Close" Click="cancelButton_Click" />
    </Grid>
</UserControl>
