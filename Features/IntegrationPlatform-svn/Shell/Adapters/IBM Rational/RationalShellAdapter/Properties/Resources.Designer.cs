//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.TeamFoundation.Migration.Shell.RationalShellAdapter.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.TeamFoundation.Migration.Shell.RationalShellAdapter.Properties.Resource" +
                            "s", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following attribute type name cannot be found in the ClearCase server:.
        /// </summary>
        internal static string CCAttrTypeNotFoundConflictDetails {
            get {
                return ResourceManager.GetString("CCAttrTypeNotFoundConflictDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict occurs when a file attribute is added, but the attribute type name cannot be found; the attribute type name must already exist in the ClearCase server..
        /// </summary>
        internal static string CCAttrTypeNotFoundConflictTypeDescription {
            get {
                return ResourceManager.GetString("CCAttrTypeNotFoundConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCase attribute type not found conflict type.
        /// </summary>
        internal static string CCAttrTypeNotFoundConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("CCAttrTypeNotFoundConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The checkin to ClearCase server failed for the following change group:.
        /// </summary>
        internal static string CCCheckinConflictDetails {
            get {
                return ResourceManager.GetString("CCCheckinConflictDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the checkin to ClearCase server failed. Choose a resolution action:.
        /// </summary>
        internal static string CCCheckinConflictTypeDescription {
            get {
                return ResourceManager.GetString("CCCheckinConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearCase checkin failed conflict.
        /// </summary>
        internal static string CCCheckinConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("CCCheckinConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when an unhandled exception is caught at adapter interface boundary..
        /// </summary>
        internal static string ClearQuestGenericConflictTypeDescription {
            get {
                return ResourceManager.GetString("ClearQuestGenericConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearQuest adapter generic conflict.
        /// </summary>
        internal static string ClearQuestGenericConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("ClearQuestGenericConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the ClearQuest login user does not have sufficent privilege to complete the migration session..
        /// </summary>
        internal static string ClearQuestInsufficentPrivilegeConflictTypeDescription {
            get {
                return ResourceManager.GetString("ClearQuestInsufficentPrivilegeConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearQuest adapter insufficent user privilege conflict.
        /// </summary>
        internal static string ClearQuestInsufficentPrivilegeConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("ClearQuestInsufficentPrivilegeConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when a ClearQuest Item contains an invalid field value.
        /// </summary>
        internal static string ClearQuestInvalidFieldValueConflictTypeDescription {
            get {
                return ResourceManager.GetString("ClearQuestInvalidFieldValueConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearQuest invalid field value conflict type.
        /// </summary>
        internal static string ClearQuestInvalidFieldValueConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("ClearQuestInvalidFieldValueConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the ClearQuest adapter fails to find the ClearQuest COM DLL..
        /// </summary>
        internal static string ClearQuestMissingCQDllConflictTypeDescription {
            get {
                return ResourceManager.GetString("ClearQuestMissingCQDllConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearQuest adapter missing ClearQuest COM dll conflict.
        /// </summary>
        internal static string ClearQuestMissingCQDllConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("ClearQuestMissingCQDllConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when ClearQuest Interop returns an error string when setting a field value..
        /// </summary>
        internal static string ClearQuestSetFieldValueConflictTypeDescription {
            get {
                return ResourceManager.GetString("ClearQuestSetFieldValueConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearQuest adapter set field conflict.
        /// </summary>
        internal static string ClearQuestSetFieldValueConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("ClearQuestSetFieldValueConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is due to a migration action that attempts to create a file property fails. Choose a resolution action:.
        /// </summary>
        internal static string FilePropertyCreationConflictTypeDescription {
            get {
                return ResourceManager.GetString("FilePropertyCreationConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A conflict has been detected when a migration action fails to create a file property..
        /// </summary>
        internal static string FilePropertyCreationConflictTypeDetails {
            get {
                return ResourceManager.GetString("FilePropertyCreationConflictTypeDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is due to a failure in label creation. Choose a resolution action:.
        /// </summary>
        internal static string LabelCreationConflictTypeDescription {
            get {
                return ResourceManager.GetString("LabelCreationConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is a fallback to use when we cannot determine a more specific cause for the label creation failure..
        /// </summary>
        internal static string LabelCreationConflictTypeDetails {
            get {
                return ResourceManager.GetString("LabelCreationConflictTypeDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string RetryAction {
            get {
                return ResourceManager.GetString("RetryAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SkipAction {
            get {
                return ResourceManager.GetString("SkipAction", resourceCulture);
            }
        }
    }
}
