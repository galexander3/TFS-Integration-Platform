<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CopyRightMessage" xml:space="preserve">
    <value>Copyright © Microsoft Corporation.  All Rights Reserved.
This code released under the terms of the
Microsoft Public License (MS-PL, http://opensource.org/licenses/ms-pl.html.)
</value>
  </data>
  <data name="DuplicatedArgument" xml:space="preserve">
    <value>Unknown or Duplicated switch {0}</value>
  </data>
  <data name="InvalidArgument" xml:space="preserve">
    <value>TF60037: Unrecognized command: {0}</value>
  </data>
  <data name="MissingArgument" xml:space="preserve">
    <value>Missing switch {0}</value>
  </data>
  <data name="ValueCannotBeNull" xml:space="preserve">
    <value>Missing input for the switch {0}</value>
  </data>
  <data name="XmlFileValidationFailed" xml:space="preserve">
    <value>TF60094: Validation failed for file '{0}'. Error: {1}</value>
  </data>
  <data name="XmlSchemaValidationFailed" xml:space="preserve">
    <value>TF60095: Validation failed for file '{0}'. Line: {1}, Col: {2}, Error: {3}</value>
  </data>
  <data name="FileAccessError" xml:space="preserve">
    <value>TF60035: Unable to open file {0}. {1}</value>
  </data>
  <data name="FileAccessSchemaError" xml:space="preserve">
    <value>TF60036: Unable to open the file {0} specified in {1}. {2}</value>
  </data>
  <data name="ErrorStart" xml:space="preserve">
    <value>{{Total Errors {0}}} ERROR: {1}</value>
  </data>
  <data name="UnableToCreateErrorFile" xml:space="preserve">
    <value>TF60040: Unable to create error file {0}. - {1}.</value>
  </data>
  <data name="MigrationFailed" xml:space="preserve">
    <value>Migration failed.</value>
  </data>
  <data name="MigrationCompleted" xml:space="preserve">
    <value>Migration completed.</value>
  </data>
  <data name="AnalysisFailed" xml:space="preserve">
    <value>Analysis failed</value>
  </data>
  <data name="AnalysisCompleted" xml:space="preserve">
    <value>Analysis completed</value>
  </data>
  <data name="DisplayProgressIndicator" xml:space="preserve">
    <value>.</value>
    <comment>this is used in progress messages. it will be displayed repeatedly to indicate progress like in "Processing Metadata........."</comment>
  </data>
  <data name="NodeNotFound" xml:space="preserve">
    <value>TF60093: Node {0} not found in file {1}.</value>
  </data>
  <data name="FileWriteError" xml:space="preserve">
    <value>Unable to write to file {0}. Error {1}</value>
  </data>
  <data name="TfsConnectFailure" xml:space="preserve">
    <value>TF60070: Unable to connect to the Team Foundation Server: '{0}'. Please ensure that the Team Foundation Server exists and try again.</value>
  </data>
  <data name="TfsNotAuthorized" xml:space="preserve">
    <value>TF60071: Your user account does not have permission to connect to the Team Foundation Server '{0}'. Please contact your Team Foundation Server administrator and request that the appropriate permission be added to your account.</value>
  </data>
  <data name="ProcessAborting" xml:space="preserve">
    <value>The process is unable to complete the requested action because it is terminating.</value>
  </data>
  <data name="ProcessIncomplete" xml:space="preserve">
    <value>Process Incomplete</value>
  </data>
  <data name="PasswordEchoChar" xml:space="preserve">
    <value>*</value>
    <comment>This char is echoed on the console to hide actual password.</comment>
  </data>
  <data name="StandardInputError" xml:space="preserve">
    <value>Unable to open or read standard input. Please verify that you are not redirecting standard input stream and try again.</value>
  </data>
  <data name="AnalysisReportTitle" xml:space="preserve">
    <value>Analysis Report</value>
  </data>
  <data name="MigrationReportTitle" xml:space="preserve">
    <value>Migration Report</value>
  </data>
  <data name="UnhandledException" xml:space="preserve">
    <value>The application is unable to handle exception: {0}</value>
  </data>
  <data name="InvalidBoolean" xml:space="preserve">
    <value>The value {0} specified in the node {1} in the converter configuration file {2} was not recognized as a valid Boolean value. Please use the values True or False.</value>
  </data>
  <data name="CorruptFileDateTime" xml:space="preserve">
    <value>Work Item TFS ID {0}: Modified the attachment file {1} write time to {2} because the original time was corrupt.</value>
  </data>
  <data name="DiskFull" xml:space="preserve">
    <value>Error: The drive {0} is out of space. Please perform a disk clean up on the drive to continue.</value>
  </data>
  <data name="ErrorWritingFileRetry" xml:space="preserve">
    <value>Unable to write to file {0}. This could be due drive being out of space or network issue. Please take corrective action and press any key to continue.

</value>
  </data>
</root>