//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version:2.0.40903.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;
using System.Collections;
// 
// This source code was auto-generated by xsd, Version=2.0.40903.0.
// 

namespace Microsoft.TeamFoundation.Converters.WorkItemTracking.Common
{
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.microsoft.com/VisualStudio/2005/workitemtracking/typedef")]
    [System.Xml.Serialization.XmlRootAttribute("WITD", Namespace = "http://schemas.microsoft.com/VisualStudio/2005/workitemtracking/typedef", IsNullable = false)]
	public partial class Witd
    {

        private WorkItemType wORKITEMTYPEField;

        private Application applicationField;

        private bool applicationFieldSpecified;

        private Version versionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public WorkItemType WORKITEMTYPE
        {
            get
            {
                return this.wORKITEMTYPEField;
            }
            set
            {
                this.wORKITEMTYPEField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Application application
        {
            get
            {
                return this.applicationField;
            }
            set
            {
                this.applicationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applicationSpecified
        {
            get
            {
                return this.applicationFieldSpecified;
            }
            set
            {
                this.applicationFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Version version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public partial class WorkItemType
    {

        private string dESCRIPTIONField;

        private ArrayList gLOBALLISTSField;

        private ArrayList fIELDSField;

        private Workflow wORKFLOWField;

        private Form fORMField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DESCRIPTION
        {
            get
            {
                return this.dESCRIPTIONField;
            }
            set
            {
                this.dESCRIPTIONField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("GLOBALLIST", Type = typeof(GlobalListDef), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList GLOBALLISTS
        {
            get
            {
                return this.gLOBALLISTSField;
            }
            set
            {
                this.gLOBALLISTSField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDGLOBALLISTS
        {
            get
            {
                if (GLOBALLISTS == null)
                {
                    GLOBALLISTS = new ArrayList();
                }
                return GLOBALLISTS;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FIELD", Type = typeof(FieldDefinition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList FIELDS
        {
            get
            {
                return this.fIELDSField;
            }
            set
            {
                this.fIELDSField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDFIELDS
        {
            get
            {
                if (FIELDS == null)
                {
                    FIELDS = new ArrayList();
                }
                return FIELDS;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Workflow WORKFLOW
        {
            get
            {
                return this.wORKFLOWField;
            }
            set
            {
                this.wORKFLOWField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Form FORM
        {
            get
            {
                return this.fORMField;
            }
            set
            {
                this.fORMField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class GlobalListDef
    {

        private ArrayList lISTITEMField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LISTITEM", Type = typeof(ListItem), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList LISTITEM
        {
            get
            {
                return this.lISTITEMField;
            }
            set
            {
                this.lISTITEMField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDLISTITEM
        {
            get
            {
                if (LISTITEM == null)
                {
                    LISTITEM = new ArrayList();
                }
                return LISTITEM;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class ListItem
    {

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class SplitterType
    {

        private DockType dockField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DockType Dock
        {
            get
            {
                return this.dockField;
            }
            set
            {
                this.dockField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum DockType
    {

        /// <remarks/>
        Fill,

        /// <remarks/>
        Top,

        /// <remarks/>
        Bottom,

        /// <remarks/>
        Left,

        /// <remarks/>
        Right,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class TabType
    {

        private ArrayList itemsField;

        private string labelField;

        private string paddingField;

        private string marginField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(GroupType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TabGroup", typeof(TabGroupType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Control", typeof(ControlType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Splitter", typeof(SplitterType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDItems
        {
            get
            {
                if (Items == null)
                {
                    Items = new ArrayList();
                }
                return Items;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Padding
        {
            get
            {
                return this.paddingField;
            }
            set
            {
                this.paddingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Margin
        {
            get
            {
                return this.marginField;
            }
            set
            {
                this.marginField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class GroupType
    {

        private ArrayList columnField;

        private string labelField;

        private string paddingField;

        private string marginField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Column", Type = typeof(ColumnType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDColumn
        {
            get
            {
                if (Column == null)
                {
                    Column = new ArrayList();
                }
                return Column;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Padding
        {
            get
            {
                return this.paddingField;
            }
            set
            {
                this.paddingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Margin
        {
            get
            {
                return this.marginField;
            }
            set
            {
                this.marginField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class ColumnType
    {

        private ArrayList itemsField;

        private string percentWidthField;

        private string fixedWidthField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(GroupType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TabGroup", typeof(TabGroupType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Control", typeof(ControlType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Splitter", typeof(SplitterType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDItems
        {
            get
            {
                if (Items == null)
                {
                    Items = new ArrayList();
                }
                return Items;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string PercentWidth
        {
            get
            {
                return this.percentWidthField;
            }
            set
            {
                this.percentWidthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string FixedWidth
        {
            get
            {
                return this.fixedWidthField;
            }
            set
            {
                this.fixedWidthField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class TabGroupType
    {

        private ArrayList tabField;

        private string paddingField;

        private string marginField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Tab", Type = typeof(TabType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList Tab
        {
            get
            {
                return this.tabField;
            }
            set
            {
                this.tabField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDTab
        {
            get
            {
                if (Tab == null)
                {
                    Tab = new ArrayList();
                }
                return Tab;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Padding
        {
            get
            {
                return this.paddingField;
            }
            set
            {
                this.paddingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Margin
        {
            get
            {
                return this.marginField;
            }
            set
            {
                this.marginField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class ControlType
    {

        private string fieldNameField;

        private string typeField;

        private string labelField;

        private LabelPositionType labelPositionField;

        private bool labelPositionFieldSpecified;

        private DockType dockField;

        private bool dockFieldSpecified;

        private string paddingField;

        private string marginField;

        private System.Xml.XmlAttribute[] anyAttrField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FieldName
        {
            get
            {
                return this.fieldNameField;
            }
            set
            {
                this.fieldNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LabelPositionType LabelPosition
        {
            get
            {
                return this.labelPositionField;
            }
            set
            {
                this.labelPositionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelPositionSpecified
        {
            get
            {
                return this.labelPositionFieldSpecified;
            }
            set
            {
                this.labelPositionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DockType Dock
        {
            get
            {
                return this.dockField;
            }
            set
            {
                this.dockField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockSpecified
        {
            get
            {
                return this.dockFieldSpecified;
            }
            set
            {
                this.dockFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Padding
        {
            get
            {
                return this.paddingField;
            }
            set
            {
                this.paddingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Margin
        {
            get
            {
                return this.marginField;
            }
            set
            {
                this.marginField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                this.anyAttrField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum LabelPositionType
    {

        /// <remarks/>
        Top,

        /// <remarks/>
        Bottom,

        /// <remarks/>
        Left,

        /// <remarks/>
        Right,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class LayoutType
    {

        private ArrayList itemsField;

        private string targetField;

        private string minimumSizeField;

        private string paddingField;

        private string marginField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(GroupType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TabGroup", typeof(TabGroupType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Control", typeof(ControlType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Splitter", typeof(SplitterType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDItems
        {
            get
            {
                if (Items == null)
                {
                    Items = new ArrayList();
                }
                return Items;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Target
        {
            get
            {
                return this.targetField;
            }
            set
            {
                this.targetField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MinimumSize
        {
            get
            {
                return this.minimumSizeField;
            }
            set
            {
                this.minimumSizeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Padding
        {
            get
            {
                return this.paddingField;
            }
            set
            {
                this.paddingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Margin
        {
            get
            {
                return this.marginField;
            }
            set
            {
                this.marginField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public partial class Form
    {

        private LayoutType layoutField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LayoutType Layout
        {
            get
            {
                return this.layoutField;
            }
            set
            {
                this.layoutField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class Reason
    {

        private ArrayList fIELDSField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FIELD", Type = typeof(FieldReference), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList FIELDS
        {
            get
            {
                return this.fIELDSField;
            }
            set
            {
                this.fIELDSField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDFIELDS
        {
            get
            {
                if (FIELDS == null)
                {
                    FIELDS = new ArrayList();
                }
                return FIELDS;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class FieldReference
    {

        private object itemField;

        private string nameField;

        /// <remarks/>
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class Reasons
    {

        private ArrayList rEASONField;

        private Reason dEFAULTREASONField;

        // private ArrayList rEASON1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("REASON", Type = typeof(Reason), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList REASON
        {
            get
            {
                return this.rEASONField;
            }
            set
            {
                this.rEASONField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDREASON
        {
            get
            {
                if (REASON == null)
                {
                    REASON = new ArrayList();
                }
                return REASON;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reason DEFAULTREASON
        {
            get
            {
                return this.dEFAULTREASONField;
            }
            set
            {
                this.dEFAULTREASONField = value;
            }
        }

        /*
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("REASON", Type = typeof(Reason), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        // [XmlArrayItem(Type = typeof(Reason))]
        public ArrayList REASON1
        {
            get
            {
                return this.rEASON1Field;
            }
            set
            {
                this.rEASON1Field = value;
            }
        }
        */
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public partial class Transition
    {

        private ArrayList aCTIONSField;

        private Reasons rEASONSField;

        private ArrayList fIELDSField;

        private string fromField;

        private string toField;

        private string forField;

        private string notField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ACTION", Type = typeof(ListItem), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList ACTIONS
        {
            get
            {
                return this.aCTIONSField;
            }
            set
            {
                this.aCTIONSField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDACTIONS
        {
            get
            {
                if (ACTIONS == null)
                {
                    ACTIONS = new ArrayList();
                }
                return ACTIONS;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reasons REASONS
        {
            get
            {
                return this.rEASONSField;
            }
            set
            {
                this.rEASONSField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FIELD", Type = typeof(FieldReference), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList FIELDS
        {
            get
            {
                return this.fIELDSField;
            }
            set
            {
                this.fIELDSField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDFIELDS
        {
            get
            {
                if (FIELDS == null)
                {
                    FIELDS = new ArrayList();
                }
                return FIELDS;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string from
        {
            get
            {
                return this.fromField;
            }
            set
            {
                this.fromField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string to
        {
            get
            {
                return this.toField;
            }
            set
            {
                this.toField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @for
        {
            get
            {
                return this.forField;
            }
            set
            {
                this.forField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string not
        {
            get
            {
                return this.notField;
            }
            set
            {
                this.notField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class State
    {

        private ArrayList fIELDSField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FIELD", Type = typeof(FieldReference), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList FIELDS
        {
            get
            {
                return this.fIELDSField;
            }
            set
            {
                this.fIELDSField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDFIELDS
        {
            get
            {
                if (FIELDS == null)
                {
                    FIELDS = new ArrayList();
                }
                return FIELDS;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class Workflow
    {

        private ArrayList sTATESField;

        private ArrayList tRANSITIONSField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("STATE", Type = typeof(State), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList STATES
        {
            get
            {
                return this.sTATESField;
            }
            set
            {
                this.sTATESField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDSTATES
        {
            get
            {
                if (STATES == null)
                {
                    STATES = new ArrayList();
                }
                return STATES;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("TRANSITION", Type = typeof(Transition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ArrayList TRANSITIONS
        {
            get
            {
                return this.tRANSITIONSField;
            }
            set
            {
                this.tRANSITIONSField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDTRANSITIONS
        {
            get
            {
                if (TRANSITIONS == null)
                {
                    TRANSITIONS = new ArrayList();
                }
                return TRANSITIONS;
            }
        }

    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FieldValueCondition))]
	public class FieldCondition
    {

        private ArrayList itemsField;

        private string fieldField;

        /// <remarks/>
        [XmlArrayItem(Type = typeof(FieldValueCondition))]
        public ArrayList Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDItems
        {
            get
            {
                if (Items == null)
                {
                    Items = new ArrayList();
                }
                return Items;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class FieldValueCondition : FieldCondition
    {

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class ServerDefaultRule
    {

        private ServerDefaultFrom fromField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ServerDefaultFrom from
        {
            get
            {
                return this.fromField;
            }
            set
            {
                this.fromField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum ServerDefaultFrom
    {

        /// <remarks/>
        clock,

        /// <remarks/>
        currentuser,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DefaultRule))]
	public class CopyRule
    {

        private CopyFrom fromField;

        private string valueField;

        private string fieldField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CopyFrom from
        {
            get
            {
                return this.fromField;
            }
            set
            {
                this.fromField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum CopyFrom
    {

        /// <remarks/>
        value,

        /// <remarks/>
        field,

        /// <remarks/>
        clock,

        /// <remarks/>
        currentuser,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class DefaultRule : CopyRule
    {
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class GlobalList
    {

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class ListRule
    {

        private ArrayList itemsField;

        private bool expanditemsField;

        private FilterItems filteritemsField;

        private bool filteritemsFieldSpecified;

        public ListRule()
        {
            this.expanditemsField = true;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LISTITEM", typeof(ListItem), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GLOBALLIST", typeof(GlobalList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ArrayList Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlIgnore]
        public ArrayList WITDItems
        {
            get
            {
                if (Items == null)
                {
                    Items = new ArrayList();
                }
                return Items;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool expanditems
        {
            get
            {
                return this.expanditemsField;
            }
            set
            {
                this.expanditemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FilterItems filteritems
        {
            get
            {
                return this.filteritemsField;
            }
            set
            {
                this.filteritemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool filteritemsSpecified
        {
            get
            {
                return this.filteritemsFieldSpecified;
            }
            set
            {
                this.filteritemsFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum FilterItems
    {

        /// <remarks/>
        excludegroups,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class EmptyRule
    {
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class ValidUserRule
    {

        private string groupField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string group
        {
            get
            {
                return this.groupField;
            }
            set
            {
                this.groupField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MinMaxRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatternRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FieldRule))]
	public class PlainRule
    {

        private string forField;

        private string notField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @for
        {
            get
            {
                return this.forField;
            }
            set
            {
                this.forField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string not
        {
            get
            {
                return this.notField;
            }
            set
            {
                this.notField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class MinMaxRule : PlainRule
    {

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class PatternRule : PlainRule
    {

        private string patternField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pattern
        {
            get
            {
                return this.patternField;
            }
            set
            {
                this.patternField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class FieldRule : PlainRule
    {

        private string fieldField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public class HelpTextRule
    {

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
	public partial class FieldDefinition
    {

        private HelpTextRule hELPTEXTField;

        private PlainRule rEQUIREDField;

        private PlainRule rEADONLYField;

        private PlainRule eMPTYField;

        private PlainRule fROZENField;

        private PlainRule cANNOTLOSEVALUEField;

        private FieldRule nOTSAMEASField;

        private ValidUserRule vALIDUSERField;

        private EmptyRule aLLOWEXISTINGVALUEField;

        private PatternRule mATCHField;

        private ListRule aLLOWEDVALUESField;

        private ListRule sUGGESTEDVALUESField;

        private ListRule pROHIBITEDVALUESField;

        private DefaultRule dEFAULTField;

        private CopyRule cOPYField;

        private ServerDefaultRule sERVERDEFAULTField;

        private FieldValueCondition wHENField;

        private FieldValueCondition wHENNOTField;

        private FieldCondition wHENCHANGEDField;

        private string nameField;

        private string refnameField;

        private FieldType typeField;

        private Reportability reportableField;

        private bool reportableFieldSpecified;

        private MeasureFormula formulaField;

        private bool formulaFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public HelpTextRule HELPTEXT
        {
            get
            {
                return this.hELPTEXTField;
            }
            set
            {
                this.hELPTEXTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PlainRule REQUIRED
        {
            get
            {
                return this.rEQUIREDField;
            }
            set
            {
                this.rEQUIREDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PlainRule READONLY
        {
            get
            {
                return this.rEADONLYField;
            }
            set
            {
                this.rEADONLYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PlainRule EMPTY
        {
            get
            {
                return this.eMPTYField;
            }
            set
            {
                this.eMPTYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PlainRule FROZEN
        {
            get
            {
                return this.fROZENField;
            }
            set
            {
                this.fROZENField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PlainRule CANNOTLOSEVALUE
        {
            get
            {
                return this.cANNOTLOSEVALUEField;
            }
            set
            {
                this.cANNOTLOSEVALUEField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FieldRule NOTSAMEAS
        {
            get
            {
                return this.nOTSAMEASField;
            }
            set
            {
                this.nOTSAMEASField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ValidUserRule VALIDUSER
        {
            get
            {
                return this.vALIDUSERField;
            }
            set
            {
                this.vALIDUSERField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EmptyRule ALLOWEXISTINGVALUE
        {
            get
            {
                return this.aLLOWEXISTINGVALUEField;
            }
            set
            {
                this.aLLOWEXISTINGVALUEField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatternRule MATCH
        {
            get
            {
                return this.mATCHField;
            }
            set
            {
                this.mATCHField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListRule ALLOWEDVALUES
        {
            get
            {
                return this.aLLOWEDVALUESField;
            }
            set
            {
                this.aLLOWEDVALUESField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListRule SUGGESTEDVALUES
        {
            get
            {
                return this.sUGGESTEDVALUESField;
            }
            set
            {
                this.sUGGESTEDVALUESField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListRule PROHIBITEDVALUES
        {
            get
            {
                return this.pROHIBITEDVALUESField;
            }
            set
            {
                this.pROHIBITEDVALUESField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DefaultRule DEFAULT
        {
            get
            {
                return this.dEFAULTField;
            }
            set
            {
                this.dEFAULTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CopyRule COPY
        {
            get
            {
                return this.cOPYField;
            }
            set
            {
                this.cOPYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ServerDefaultRule SERVERDEFAULT
        {
            get
            {
                return this.sERVERDEFAULTField;
            }
            set
            {
                this.sERVERDEFAULTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FieldValueCondition WHEN
        {
            get
            {
                return this.wHENField;
            }
            set
            {
                this.wHENField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FieldValueCondition WHENNOT
        {
            get
            {
                return this.wHENNOTField;
            }
            set
            {
                this.wHENNOTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FieldCondition WHENCHANGED
        {
            get
            {
                return this.wHENCHANGEDField;
            }
            set
            {
                this.wHENCHANGEDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refname
        {
            get
            {
                return this.refnameField;
            }
            set
            {
                this.refnameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FieldType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Reportability reportable
        {
            get
            {
                return this.reportableField;
            }
            set
            {
                this.reportableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reportableSpecified
        {
            get
            {
                return this.reportableFieldSpecified;
            }
            set
            {
                this.reportableFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MeasureFormula formula
        {
            get
            {
                return this.formulaField;
            }
            set
            {
                this.formulaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool formulaSpecified
        {
            get
            {
                return this.formulaFieldSpecified;
            }
            set
            {
                this.formulaFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum FieldType
    {

        /// <remarks/>
        String,

        /// <remarks/>
        Integer,

        /// <remarks/>
        Double,

        /// <remarks/>
        DateTime,

        /// <remarks/>
        PlainText,

        /// <remarks/>
        HTML,

        /// <remarks/>
        TreePath,

        /// <remarks/>
        History,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum Reportability
    {

        /// <remarks/>
        dimension,

        /// <remarks/>
        detail,

        /// <remarks/>
        measure,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum MeasureFormula
    {

        /// <remarks/>
        sum,

        /// <remarks/>
        count,

        /// <remarks/>
        distinctcount,

        /// <remarks/>
        avg,

        /// <remarks/>
        min,

        /// <remarks/>
        max,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum Application
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Work item type editor")]
        Workitemtypeeditor,
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    public enum Version
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.0")]
        Item10,
    }
}
