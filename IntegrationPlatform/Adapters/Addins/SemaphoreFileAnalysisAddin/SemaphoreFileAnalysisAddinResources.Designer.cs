//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SemaphoreFileAnalysisAddin {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SemaphoreFileAnalysisAddinResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SemaphoreFileAnalysisAddinResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SemaphoreFileAnalysisAddin.SemaphoreFileAnalysisAddinResources", typeof(SemaphoreFileAnalysisAddinResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semaphore File Analysis.
        /// </summary>
        internal static string AddinFriendlyName {
            get {
                return ResourceManager.GetString("AddinFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change group created by TFS Integration Platform migrating peer change group: {0}.
        /// </summary>
        internal static string ChangeGroupCommentFormat {
            get {
                return ResourceManager.GetString("ChangeGroupCommentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semaphore file in XML format found at &apos;{0}&apos; does not contain ChangeGroup element; ChangeGroup comments will not be modified..
        /// </summary>
        internal static string ChangeGroupCommentNotFoundInSemaphoreFile {
            get {
                return ResourceManager.GetString("ChangeGroupCommentNotFoundInSemaphoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS_IP_{0:yyyy}_{0:MM}_{0:dd}_{0:HH}_{0:mm}_{0:ss}_{0:fff}.
        /// </summary>
        internal static string DefaultLabelNameFormat {
            get {
                return ResourceManager.GetString("DefaultLabelNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SemaphoreFileAnalysisAddin: Unable to process semaphore file: {0}.
        /// </summary>
        internal static string ExceptionProcessingSemaphoreFile {
            get {
                return ResourceManager.GetString("ExceptionProcessingSemaphoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recursive label for items synced from file system path &apos;{0}&apos;.
        /// </summary>
        internal static string LabelCommentFormat {
            get {
                return ResourceManager.GetString("LabelCommentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring Label element found in semaphore file because the current session is not a VC session..
        /// </summary>
        internal static string LabelInSemaphoreFileIgnored {
            get {
                return ResourceManager.GetString("LabelInSemaphoreFileIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semaphore file in XML format found at &apos;{0}&apos; does not contain a Label element; no labels will be created..
        /// </summary>
        internal static string LabelNotFoundInSemaphoreFile {
            get {
                return ResourceManager.GetString("LabelNotFoundInSemaphoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Semaphore File Analysis Addin is configured but the required CustomSetting &apos;SemaphoreFilePath&apos; is missing..
        /// </summary>
        internal static string SemaphoreFilePathNotConfigured {
            get {
                return ResourceManager.GetString("SemaphoreFilePathNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read semaphore file at {0}: {1}.
        /// </summary>
        internal static string UnableToReadSemaphoreFile {
            get {
                return ResourceManager.GetString("UnableToReadSemaphoreFile", resourceCulture);
            }
        }
    }
}
