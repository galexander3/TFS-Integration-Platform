//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.16676
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.TeamFoundation.Migration.Shell.Tfs11ShellAdapter.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.TeamFoundation.Migration.Shell.Tfs11ShellAdapter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when an Area or Iteration Path exists on the server but should not..
        /// </summary>
        internal static string ExcessivePathConflictTypeDescription {
            get {
                return ResourceManager.GetString("ExcessivePathConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excessive Path Conflict Type.
        /// </summary>
        internal static string ExcessivePathConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("ExcessivePathConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the size of an attachment file exceeds the maximum allowed attachment size on the TFS server..
        /// </summary>
        internal static string FileAttachmentOversizedConflictTypeDescription {
            get {
                return ResourceManager.GetString("FileAttachmentOversizedConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS WIT attachment file oversized.
        /// </summary>
        internal static string FileAttachmentOversizedConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("FileAttachmentOversizedConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the migration service account does not met the permission requirements..
        /// </summary>
        internal static string InsufficientPermissionConflictTypeDescription {
            get {
                return ResourceManager.GetString("InsufficientPermissionConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS WIT insufficient permission conflict type.
        /// </summary>
        internal static string InsufficientPermissionConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("InsufficientPermissionConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when a TFS Work Item contains invalid field..
        /// </summary>
        internal static string InvalidFieldConflictTypeDescription {
            get {
                return ResourceManager.GetString("InvalidFieldConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS WIT invalid field conflict type.
        /// </summary>
        internal static string InvalidFieldConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("InvalidFieldConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when a TFS Work Item contains invalid field value.
        /// </summary>
        internal static string InvalidFieldValueConflictTypeDescription {
            get {
                return ResourceManager.GetString("InvalidFieldValueConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS WIT invalid field value conflict type.
        /// </summary>
        internal static string InvalidFieldValueConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("InvalidFieldValueConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the change submitted to the TFS server is invalid..
        /// </summary>
        internal static string InvalidSubmissionConflictTypeDescription {
            get {
                return ResourceManager.GetString("InvalidSubmissionConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS WIT invalid submission conflict type.
        /// </summary>
        internal static string InvalidSubmissionConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("InvalidSubmissionConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddLink: The specified link type enforces noncircularity in its hierarchy..
        /// </summary>
        internal static string TFSCyclicLinkConflictTypeDescription {
            get {
                return ResourceManager.GetString("TFSCyclicLinkConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circularity in link hierarchy conflict type.
        /// </summary>
        internal static string TFSCyclicLinkConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("TFSCyclicLinkConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link does not exist or access is denied..
        /// </summary>
        internal static string TFSLinkAccessViolationConflictTypeDescription {
            get {
                return ResourceManager.GetString("TFSLinkAccessViolationConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link modification conflict.
        /// </summary>
        internal static string TFSLinkAccessViolationConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("TFSLinkAccessViolationConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to modify links. The following linked work items have been locked by an administrator..
        /// </summary>
        internal static string TFSModifyLockedWorkItemLinkConflictTypeDescription {
            get {
                return ResourceManager.GetString("TFSModifyLockedWorkItemLinkConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid modification of locked Work Item Link.
        /// </summary>
        internal static string TFSModifyLockedWorkItemLinkConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("TFSModifyLockedWorkItemLinkConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddLink: The specified link type requires that work items have a single parent..
        /// </summary>
        internal static string TFSMultipleParentLinkConflictTypeDescription {
            get {
                return ResourceManager.GetString("TFSMultipleParentLinkConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single linked parent violation conflict type.
        /// </summary>
        internal static string TFSMultipleParentLinkConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("TFSMultipleParentLinkConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get Azure Service Identity: {0}.
        /// </summary>
        internal static string UnableToGetAzureServiceIdentity {
            get {
                return ResourceManager.GetString("UnableToGetAzureServiceIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save Azure Service Identity locally: {0}.
        /// </summary>
        internal static string UnableToSaveAzureServiceIdentityLocally {
            get {
                return ResourceManager.GetString("UnableToSaveAzureServiceIdentityLocally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the ChangeType is not recognized..
        /// </summary>
        internal static string UnhandledChangeTypeConflictTypeDescription {
            get {
                return ResourceManager.GetString("UnhandledChangeTypeConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled ChangeType conflict.
        /// </summary>
        internal static string UnhandledChangeTypeConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("UnhandledChangeTypeConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when an unknown exception is thrown during Work Item data submission..
        /// </summary>
        internal static string WitGeneralConflictTypeDescription {
            get {
                return ResourceManager.GetString("WitGeneralConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS WIT general conflict type.
        /// </summary>
        internal static string WitGeneralConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("WitGeneralConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the history information of migrated work item is not found..
        /// </summary>
        internal static string WorkItemHistoryNotFoundConflictTypeDescription {
            get {
                return ResourceManager.GetString("WorkItemHistoryNotFoundConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS WIT history not found conflict type.
        /// </summary>
        internal static string WorkItemHistoryNotFoundConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("WorkItemHistoryNotFoundConflictTypeFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This conflict is detected when the Work Item Type of a Work Item does not exist on the target TFS system..
        /// </summary>
        internal static string WorkItemTypeNotExistConflictTypeDescription {
            get {
                return ResourceManager.GetString("WorkItemTypeNotExistConflictTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFS Work Item Type not exist conflict type.
        /// </summary>
        internal static string WorkItemTypeNotExistConflictTypeFriendlyName {
            get {
                return ResourceManager.GetString("WorkItemTypeNotExistConflictTypeFriendlyName", resourceCulture);
            }
        }
    }
}
