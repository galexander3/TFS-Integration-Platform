<!-- Copyright © Microsoft Corporation.  All Rights Reserved.  This code released under the terms of the Microsoft Public License (MS-PL, http://opensource.org/licenses/ms-pl.html.) -->
<Window x:Class="Microsoft.TeamFoundation.Migration.Shell.Tfs11ShellAdapter.VCServerPathDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Microsoft.TeamFoundation.Migration.Shell.Tfs11ShellAdapter"
        Title="Choose a Version Control Path" MinHeight="400" MinWidth="400" Height="400" Width="400" WindowStyle="ToolWindow" ResizeMode="CanResizeWithGrip"
        ShowInTaskbar="False" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <HierarchicalDataTemplate DataType="{x:Type local:VCServerPathNodeViewModel}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <Image Height="16">
                    <Image.Style>
                        <Style>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Type}" Value="Folder" />
                                        <Condition Binding="{Binding IsExpanded}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Image.Source" Value="Graphics/folderopened_16.png" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Type}" Value="Folder" />
                                        <Condition Binding="{Binding IsExpanded}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Image.Source" Value="Graphics/folderclosed_16.png" />
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Root">
                                    <Setter Property="Image.Source" Value="Graphics/teamFoundation16.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Branch">
                                    <Setter Property="Image.Source" Value="Graphics/BranchObjectFolder.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="None">
                                    <Setter Property="Image.Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock Text="{Binding DisplayName}" Margin="2" />
                <Canvas>
                    <Image x:Name="busyIcon" Height="20" Source="Graphics/busywait_transparent.png" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image.RenderTransform>
                            <RotateTransform Angle="0" CenterX="10" CenterY="10" />
                        </Image.RenderTransform>
                        <Image.Triggers>
                            <EventTrigger RoutedEvent="Image.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="busyIcon"
                                            Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                            From="0" To="360" Duration="0:0:2"
                                            AutoReverse="False" RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>
                    </Image>
                </Canvas>
            </StackPanel>
        </HierarchicalDataTemplate>
    </Window.Resources>
    <Grid Margin="12">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TreeView Grid.Row="0" x:Name="rootTreeView" ItemsSource="{Binding RootList}">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <EventSetter Event="Selected" Handler="TreeViewItem_Selected" />
                    <Setter Property="IsExpanded" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <TextBlock Grid.Row="0" Text="Loading..." HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Grid Grid.Row="1">
            <DockPanel>
                <Label Content="Path: " />
                <TextBlock Text="{Binding SelectedNode.ServerPath, Mode=OneWay}" ToolTip="{Binding SelectedNode.ServerPath, Mode=OneWay}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                    <Setter Property="TextBlock.Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DockPanel>
        </Grid>
        <UniformGrid Grid.Row="2" Columns="2" HorizontalAlignment="Right">
            <Button x:Name="saveButton" Content="OK" Click="saveButton_Click" IsDefault="True" Margin="0,0,6,0">
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedNode}" Value="{x:Null}">
                                <Setter Property="Button.IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedNode.ServerPath}" Value="{x:Null}">
                                <Setter Property="Button.IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="cancelButton" Content="Cancel" IsCancel="True" Margin="0" />
        </UniformGrid>
    </Grid>
</Window>
